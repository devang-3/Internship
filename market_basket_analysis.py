# -*- coding: utf-8 -*-
"""Market Basket Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1shKB2WpPY2USLbdxr_2nB-TwyQXiwf1u
"""

pip install pandas mlxtend

import pandas as pd
from mlxtend.preprocessing import TransactionEncoder

# Simulated Groceries dataset (real-world-like format)
transactions = [
    ['milk', 'bread', 'butter'],
    ['beer', 'diapers', 'milk'],
    ['milk', 'diapers', 'bread', 'butter'],
    ['bread', 'butter'],
    ['diapers', 'milk'],
    ['bread', 'butter', 'jam'],
    ['beer', 'chips'],
    ['bread', 'milk', 'diapers'],
    ['milk', 'bread', 'butter'],
    ['beer', 'diapers', 'chips'],
]

# Convert to one-hot encoded DataFrame
te = TransactionEncoder()
te_data = te.fit(transactions).transform(transactions)
df = pd.DataFrame(te_data, columns=te.columns_)
df.head()

from mlxtend.frequent_patterns import apriori, association_rules

# Find frequent itemsets with minimum support threshold
frequent_itemsets = apriori(df, min_support=0.3, use_colnames=True)
print(frequent_itemsets)

rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1.0)

# Display meaningful columns
rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']].sort_values(by='lift', ascending=False)

import networkx as nx
import matplotlib.pyplot as plt

G = nx.DiGraph()

for _, row in rules.iterrows():
    for ant in row['antecedents']:
        for con in row['consequents']:
            G.add_edge(ant, con, weight=row['lift'])

plt.figure(figsize=(8,6))
pos = nx.spring_layout(G)
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=2000, font_size=12, edge_color='gray')
plt.title("Association Rule Network")
plt.show()
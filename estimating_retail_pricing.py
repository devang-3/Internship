# -*- coding: utf-8 -*-
"""Estimating retail pricing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/149a_RMswyTTYFhCkfzyQPK1JtRZGh1EW
"""

def calculate_retail_price_by_markup(cost_price, markup_percent):
    """Calculate retail price based on cost and markup."""
    return round(cost_price * (1 + markup_percent / 100), 2)

def calculate_retail_price_by_margin(cost_price, target_margin_percent):
    """Calculate retail price based on cost and target profit margin."""
    if target_margin_percent >= 100:
        raise ValueError("Margin must be less than 100%")
    return round(cost_price / (1 - target_margin_percent / 100), 2)

def suggest_price(cost_price, markup_percent, target_margin_percent, competitor_prices=[]):
    """Estimate retail price based on multiple methods and competitor prices."""

    price_markup = calculate_retail_price_by_markup(cost_price, markup_percent)
    price_margin = calculate_retail_price_by_margin(cost_price, target_margin_percent)

    if competitor_prices:
        avg_competitor_price = round(sum(competitor_prices) / len(competitor_prices), 2)
    else:
        avg_competitor_price = None

    print(f"Cost Price: ₹{cost_price}")
    print(f"Price based on {markup_percent}% markup: ₹{price_markup}")
    print(f"Price based on {target_margin_percent}% profit margin: ₹{price_margin}")

    if avg_competitor_price:
        print(f"Average Competitor Price: ₹{avg_competitor_price}")
        suggested = round((price_margin + price_markup + avg_competitor_price) / 3, 2)
        print(f"Suggested Balanced Price: ₹{suggested}")
    else:
        suggested = round((price_margin + price_markup) / 2, 2)
        print(f"Suggested Price (No competitor data): ₹{suggested}")

    return suggested


# Example usage
cost = 400  # ₹
markup = 30  # in %
target_margin = 25  # in %
competitor_prices = [500, 520, 540]  # optional

suggested_price = suggest_price(cost, markup, target_margin, competitor_prices)